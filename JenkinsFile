properties([
    parameters([
        string(name: 'PORT', defaultValue: "3001", description: 'Port?'),
        string(name: 'CONTAINER_NAME', defaultValue: 'jsauth', description: 'Application Name (used as container name, no spaces or symboles)?'),
        string(name: 'IMAGE_NAME', defaultValue: 'jsauth', description: "Docker Image Name")
    ])
])
node ('docker'){
    checkout scm
    
        env.DOCKER_IMAGE_VERSION="0.1"

        stage('Build') {
                //run linting
                //sh 'npm lint'

                //run unit tests
               // sh 'npm test'
                try{
                    echo "Working in ${pwd}"
                    //make the tarball 
                    sh "chmod a+rx build_JSAuth.sh"
                    sh "./build_JSAuth.sh"
                    
                def access = 'test'
                def refresh = 'test2'
                //build the docker image
                sh """
                docker build \
                --build-arg APP_NAME=${params.CONTAINER_NAME} \
                --build-arg ARG_ACCESS_TOKEN_SECRET=${access} \
                --build-arg ARG_REFRESH_TOKEN_SECRET=${refresh} \
                -t ${params.IMAGE_NAME}-${params.CONTAINER_NAME}:${DOCKER_IMAGE_VERSION} .
                """
                }
                finally
                {
                    deleteDir()
                }           
                                


            
        }
        stage('Deploy') {
            if(env.BRANCH_NAME =='master'){
                //pass prod environment file
            }else {
                 //pass non-prod environment file

            }


                sh "docker run --name ${params.CONTAINER_NAME} -p ${PORT}:${PORT} -d --restart unless-stopped ${params.IMAGE_NAME}-${params.CONTAINER_NAME}:${DOCKER_IMAGE_VERSION}"
            
        }
        

           if(env.BRANCH_NAME =='master'){
              stage('Performance Test') {
               //run jMeter script if we are deploying to prod
            echo "Run jMeter Script"
            }
           } 
           stage('Functional Test') {
           //run postman script
           echo "Run Postman collection"
        }

        
    
}